class Solution {
public:
    int reversePairs(vector<int>& nums) {
        return mergeSort(nums,0, nums.size()-1);
    }
    private:
    int mergeSort(vector<int>& nums, int left, int right){
        if(left>= right) return 0;
        int mid= left+ (right- left)/2;
        int cnt = mergeSort(nums, left, mid)+ mergeSort(nums,mid+1, right);
         int j= mid+1;
         for(int i=left; i<=mid; i++){
            while(j<= right && (long)nums[i]> 2LL * nums[j]) j++;
            cnt+= j - (mid+1);
         }
         vector<int> temp;
         int i= left ,k = mid+1;
         while(i<=mid && k<= right){
            if(nums[i]<=nums[k])temp.push_back(nums[i++]);
            else temp.push_back(nums[k++]);
         }
         while(i<=mid) temp.push_back(nums[i++]);
         while(k<=right) temp.push_back(nums[k++]);
         for (int i = left; i <= right; ++i) {
            nums[i] = temp[i - left];
        }

        return cnt;

    }
};
